<?php

/**
 * eSigner API usage sample
 * Site esigner.com.br
 * Date 2021-06-22
 *
 * Token request and consume data read API
 * 
 * 
 * @category eSigner API
 * @author Rogerio Amaral <rogerio@sistemaaula.com.br>
 */


//PROCESS: GENERATE TOKEN JWT

$api_server = 'https://yourname.esigner.com.br/api/token/generate'; // Link eSigner API
$token = "zOAxWUy5NAmnuzvekab4U6VjgEvn1lyD58508e5033e4489f6bdd19f5c60b5f9d"; // Get your token from eSigner Web App
$post = array('usermail'=>'signum@signum.net.br','token'=>'zOAxWUy5NAmnuzvekab4U6VjgEvn1lyD58508e5033e4489f6bdd19f5c60b5f9d'); // Array of data with user e-mail and token, from eSigner Web App


$request = jwt_request($api_server,$token,$post); // Send or retrieve data

$retStatus = $request["status"]; // Receive status field
$retCode = $request["code"]; // Receive code field
$retMessage = $request["message"]; // Receive message field
$retAccessToken = $request["document"]["access_token"]; // Receive access_token field
$retExpiresIn = $request["document"]["expires_in"]; // Receive expires_in field
$retTokenType = $request["document"]["token_type"]; // Receive token_type field

echo $retAccessToken; //Show access_token field
// This token is valid for 60 minutes, it is not recommended to present or share this token

//END PROCESS: GENERATE TOKEN JWT


//PROCESS: RETRIEVE DATA WITH JWT TOKEN

// POST data array with record return parameters
$post = array('pageno'=>'1','pagesize'=>'10'); 

// OR you can make a request via GET, passing the parameters in the querystring
$api_server = 'https://yourname.esigner.com.br/api/audit/read?pageno=1&pagesize=10'; 

// If you pass the parameters via GET and POST, GET has the preference


// Token that was generated by the generate endpoint, only the access_token field, same of line 30
$token = $retAccessToken;

$requestData = jwt_request($api_server,$token,$post); // Send or retrieve data

//Show data
print_r($requestData);

//END PROCESS: RETRIEVE DATA WITH JWT TOKEN



//PROCESS: PHP FUNCTION FOR SEND REQUEST JWT TOKEN OR DATA
function jwt_request($api_server, $token, $post) {

    header('Content-Type: application/json'); // Specify the type of data
    $ch = curl_init($api_server); // Initialise cURL
    $post = json_encode($post); // Encode the data array into a JSON string
    $authorization = "Authorization: Bearer ".$token; // Prepare the authorisation token
    curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json' , $authorization )); // Inject the token into the header
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, 1); // Specify the request method as POST
    curl_setopt($ch, CURLOPT_POSTFIELDS, $post); // Set the posted fields
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1); // This will follow any redirects
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
    $result = curl_exec($ch); // Execute the cURL statement
    curl_close($ch); // Close the cURL connection
//    return ($result); // Return the received data for JSON
    return json_decode($result, true); // Return the received data for string
 }
//END PROCESS: PHP FUNCTION FOR SEND REQUEST JWT TOKEN OR DATA

?>
